{"ast":null,"code":"\"use client\";import{useState,useEffect}from\"react\";export function useMobile(){const[isMobile,setIsMobile]=useState(false);useEffect(()=>{const checkIfMobile=()=>{setIsMobile(window.innerWidth<768);};// Initial check\ncheckIfMobile();// Add event listener\nwindow.addEventListener(\"resize\",checkIfMobile);// Clean up\nreturn()=>window.removeEventListener(\"resize\",checkIfMobile);},[]);return isMobile;}","map":{"version":3,"names":["useState","useEffect","useMobile","isMobile","setIsMobile","checkIfMobile","window","innerWidth","addEventListener","removeEventListener"],"sources":["C:/Users/HIGH LEVEL/Downloads/portfolio/src/hooks/useMobile.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\n\nexport function useMobile() {\n  const [isMobile, setIsMobile] = useState(false)\n\n  useEffect(() => {\n    const checkIfMobile = () => {\n      setIsMobile(window.innerWidth < 768)\n    }\n\n    // Initial check\n    checkIfMobile()\n\n    // Add event listener\n    window.addEventListener(\"resize\", checkIfMobile)\n\n    // Clean up\n    return () => window.removeEventListener(\"resize\", checkIfMobile)\n  }, [])\n\n  return isMobile\n}\n"],"mappings":"AAAA,YAAY,CAEZ,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,MAAO,SAAS,CAAAC,SAASA,CAAA,CAAG,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CAE/CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAI,aAAa,CAAGA,CAAA,GAAM,CAC1BD,WAAW,CAACE,MAAM,CAACC,UAAU,CAAG,GAAG,CAAC,CACtC,CAAC,CAED;AACAF,aAAa,CAAC,CAAC,CAEf;AACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEH,aAAa,CAAC,CAEhD;AACA,MAAO,IAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEJ,aAAa,CAAC,CAClE,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAF,QAAQ,CACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}