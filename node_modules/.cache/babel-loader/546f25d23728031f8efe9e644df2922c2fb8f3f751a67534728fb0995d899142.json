{"ast":null,"code":"\"use client\";import{createContext,useContext,useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext({theme:\"dark\",setTheme:()=>null});export function ThemeProvider(_ref){let{children,defaultTheme=\"dark\",storageKey=\"theme\"}=_ref;const[theme,setTheme]=useState(()=>{if(typeof window!==\"undefined\"){return localStorage.getItem(storageKey)||defaultTheme;}return defaultTheme;});useEffect(()=>{const root=window.document.documentElement;root.classList.remove(\"light\",\"dark\");root.classList.add(theme);localStorage.setItem(storageKey,theme);},[theme,storageKey]);const value={theme,setTheme:newTheme=>{setTheme(newTheme);}};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});}export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error(\"useTheme must be used within a ThemeProvider\");}return context;};","map":{"version":3,"names":["createContext","useContext","useEffect","useState","jsx","_jsx","ThemeContext","theme","setTheme","ThemeProvider","_ref","children","defaultTheme","storageKey","window","localStorage","getItem","root","document","documentElement","classList","remove","add","setItem","value","newTheme","Provider","useTheme","context","undefined","Error"],"sources":["C:/Users/HIGH LEVEL/Downloads/portfolio/src/components/theme-provider.jsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useEffect, useState } from \"react\"\n\nconst ThemeContext = createContext({\n  theme: \"dark\",\n  setTheme: () => null,\n})\n\nexport function ThemeProvider({ children, defaultTheme = \"dark\", storageKey = \"theme\" }) {\n  const [theme, setTheme] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(storageKey) || defaultTheme\n    }\n    return defaultTheme\n  })\n\n  useEffect(() => {\n    const root = window.document.documentElement\n    root.classList.remove(\"light\", \"dark\")\n    root.classList.add(theme)\n    localStorage.setItem(storageKey, theme)\n  }, [theme, storageKey])\n\n  const value = {\n    theme,\n    setTheme: (newTheme) => {\n      setTheme(newTheme)\n    },\n  }\n\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext)\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\")\n  }\n  return context\n}\n"],"mappings":"AAAA,YAAY,CAEZ,OAASA,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAEtE,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CACjCO,KAAK,CAAE,MAAM,CACbC,QAAQ,CAAEA,CAAA,GAAM,IAClB,CAAC,CAAC,CAEF,MAAO,SAAS,CAAAC,aAAaA,CAAAC,IAAA,CAA4D,IAA3D,CAAEC,QAAQ,CAAEC,YAAY,CAAG,MAAM,CAAEC,UAAU,CAAG,OAAQ,CAAC,CAAAH,IAAA,CACrF,KAAM,CAACH,KAAK,CAAEC,QAAQ,CAAC,CAAGL,QAAQ,CAAC,IAAM,CACvC,GAAI,MAAO,CAAAW,MAAM,GAAK,WAAW,CAAE,CACjC,MAAO,CAAAC,YAAY,CAACC,OAAO,CAACH,UAAU,CAAC,EAAID,YAAY,CACzD,CACA,MAAO,CAAAA,YAAY,CACrB,CAAC,CAAC,CAEFV,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,IAAI,CAAGH,MAAM,CAACI,QAAQ,CAACC,eAAe,CAC5CF,IAAI,CAACG,SAAS,CAACC,MAAM,CAAC,OAAO,CAAE,MAAM,CAAC,CACtCJ,IAAI,CAACG,SAAS,CAACE,GAAG,CAACf,KAAK,CAAC,CACzBQ,YAAY,CAACQ,OAAO,CAACV,UAAU,CAAEN,KAAK,CAAC,CACzC,CAAC,CAAE,CAACA,KAAK,CAAEM,UAAU,CAAC,CAAC,CAEvB,KAAM,CAAAW,KAAK,CAAG,CACZjB,KAAK,CACLC,QAAQ,CAAGiB,QAAQ,EAAK,CACtBjB,QAAQ,CAACiB,QAAQ,CAAC,CACpB,CACF,CAAC,CAED,mBAAOpB,IAAA,CAACC,YAAY,CAACoB,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAb,QAAA,CAAEA,QAAQ,CAAwB,CAAC,CAChF,CAEA,MAAO,MAAM,CAAAgB,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAG3B,UAAU,CAACK,YAAY,CAAC,CACxC,GAAIsB,OAAO,GAAKC,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAF,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}